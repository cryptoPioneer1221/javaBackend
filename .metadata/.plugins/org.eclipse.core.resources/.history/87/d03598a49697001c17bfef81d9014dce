package com.Springboot.controller;

import org.hibernate.loader.plan.spi.CollectionReference;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;


import com.Springboot.model.User;
import com.Springboot.service.RegistrationService;
import com.google.cloud.firestore.Firestore;

@RestController
public class Registration {
	@Autowired
	private RegistrationService service;
	
	@PostMapping("/registerUser")
	public User registerUser(@RequestBody User user) throws Exception {
		String tempEmailId=user.getEmailid();
		if(tempEmailId!=null && !"".equals(tempEmailId) ) {
			User userobj = service.fetchUserByEmailId(tempEmailId);
			if(userobj!=null) {
				throw new Exception("user with"+tempEmailId+" is already exist");
			}
		}
		User userObj=null;
		userObj=service.saveUser(user);
		return userObj;
	}
@PostMapping("/login")
	public User loginUser(@RequestBody User user) throws Exception {

		String tempEmailId=user.getEmailid();
		String tempPass=user.getPassword();
		User userObj=null;
		if(tempEmailId!=null && tempPass !=null) {
			userObj=service.fetchUserByEmailIdAndPassword(tempEmailId,tempPass);
		}
		if(userObj==null) {
			throw new Exception("Bad credentials");
		}
		return userObj;
	}

}
